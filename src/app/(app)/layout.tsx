import { env } from '@env'
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import { Toaster } from 'react-hot-toast'

import '@/app/(app)/globals.css'
import GoogleAdsense from '@/components/GoogleAdsense'
import GoogleAnalytics from '@/components/GoogleAnalytics'
import Provider from '@/trpc/Provider'
import { serverClient } from '@/trpc/serverClient'

const inter = Inter({ subsets: ['latin'] })

export async function generateMetadata(): Promise<Metadata> {
  try {
    // calling the site-settings to get all the data
    const metadata = await serverClient.siteSettings.getSiteSettings()
    const generalSettings = metadata.general

    const ogImageUrl =
      typeof generalSettings.ogImageUrl === 'string'
        ? generalSettings.ogImageUrl
        : generalSettings.ogImageUrl.sizes?.blogImageSize3?.url!

    const title = {
      default: generalSettings.title,
      template: `%s | ${generalSettings.title}`,
    }
    const description = generalSettings.description
    const ogImage = [
      {
        url: ogImageUrl,
        height: 630,
        width: 1200,
        alt: `og image`,
      },
    ]

    return {
      title,
      description,
      // we're appending the http|https int the env variable
      metadataBase: env.NEXT_PUBLIC_PUBLIC_URL as unknown as URL,
      openGraph: {
        title,
        description,
        images: ogImage,
      },
      twitter: {
        title,
        description,
        images: ogImage,
      },
      keywords: generalSettings.keywords,
    }
  } catch (error) {
    // in error case returning a base metadata object
    return {
      title: 'Ygency',
      description: 'Generated by create cql app',
    }
  }
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const metadata = await serverClient.siteSettings.getSiteSettings()
  const generalSettings = metadata.general

  const faviconUrl =
    typeof generalSettings?.faviconUrl === 'string'
      ? generalSettings?.faviconUrl
      : generalSettings?.faviconUrl?.url!

  return (
    <html lang='en' className='dark'>
      <head>
        {/* added a explicit link tag because favicon is coming from site-settings */}
        <link rel='icon' type='image/x-icon' href={faviconUrl} />
        <head>
          <meta charSet='utf-8' />
          <meta name='description' />
          <meta httpEquiv='X-UA-Compatible' content='IE=edge' />
          <meta
            name='viewport'
            content='width=device-width, initial-scale=1, shrink-to-fit=no'
          />

          {/* Google Fonts */}
          {/* eslint-disable-next-line @next/next/no-page-custom-font */}
          <link
            href='https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap'
            rel='stylesheet'
          />
          {/* Flaticon */}
          {/* eslint-disable-next-line @next/next/no-css-tags */}
          <link rel='stylesheet' href='/assets/css/flaticon.min.css' />
          {/* eslint-disable-next-line @next/next/no-css-tags */}
          <link
            rel='stylesheet'
            href='/assets/css/fontawesome-5.14.0.min.css'
          />
          {/* eslint-disable-next-line @next/next/no-css-tags */}
          <link rel='stylesheet' href='/assets/css/bootstrap.min.css' />
          {/* eslint-disable-next-line @next/next/no-css-tags */}
          <link rel='stylesheet' href='/assets/css/magnific-popup.min.css' />
          {/* eslint-disable-next-line @next/next/no-css-tags */}
          <link rel='stylesheet' href='/assets/css/nice-select.min.css' />
          {/* eslint-disable-next-line @next/next/no-css-tags */}
          <link rel='stylesheet' href='/assets/css/animate.min.css' />
          {/* eslint-disable-next-line @next/next/no-css-tags */}
          <link rel='stylesheet' href='/assets/css/slick.min.css' />
          {/* eslint-disable-next-line @next/next/no-css-tags */}
          <link rel='stylesheet' href='/assets/css/style.css' />
          {/* eslint-disable-next-line @next/next/no-css-tags */}
          <link rel='stylesheet' href='/assets/css/custom.css' />
          <GoogleAnalytics metadata={metadata} />
          <GoogleAdsense metadata={metadata} />
        </head>
      </head>
      <body className={`${inter.className}`}>
        <Provider>{children}</Provider>
        <Toaster position='bottom-right' />
      </body>
    </html>
  )
}
